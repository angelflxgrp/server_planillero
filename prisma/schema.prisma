generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ---------- roles ----------
model Rol {
  id        Int        @id                             // Manual seg√∫n DDL
  nombre    String     @db.VarChar(45)
  createdAt DateTime?  @default(now()) @map("created_at")
  updatedAt DateTime?                @map("updated_at")
  deletedAt DateTime?                @map("deleted_at")

  empleados Empleado[]

  @@map("roles")
}

// --------- empresas ---------
model Empresa {
  id           Int            @id @default(autoincrement())
  codigo       String?        @db.VarChar(45)
  nombre       String?        @db.VarChar(100)
  createdAt    DateTime?      @default(now()) @map("created_at")
  updatedAt    DateTime?                     @map("updated_at")
  deletedAt    DateTime?                     @map("deleted_at")

  departamentos Departamento[]
  jobs          Job[]         @relation("EmpresaJobs")
  jobsMostrar   Job[]         @relation("EmpresaMostrarJobs")
  planillas     Planilla[]

  @@map("empresas")
}

// ------ departamentos -------
model Departamento {
  id         Int         @id @default(autoincrement())
  empresaId  Int         @map("empresa_id")
  nombre     String?     @db.VarChar(100)
  codigo     String?     @db.VarChar(45)
  createdAt  DateTime?   @default(now()) @map("created_at")
  updatedAt  DateTime?                @map("updated_at")
  deletedAt  DateTime?                @map("deleted_at")

  empresa    Empresa     @relation(fields: [empresaId], references: [id])
  empleados  Empleado[]

  @@index([empresaId], name: "fk_departamentos_empresas_idx")
  @@map("departamentos")
}

// ------- empleados --------
model Empleado {
  id                     Int                  @id @default(autoincrement())
  codigo                 String?              @db.VarChar(20) @unique
  nombre                 String               @db.VarChar(100)
  apellido               String?              @db.VarChar(100)
  horasDiariasTrabajadas Int?                 @map("horas_diarias_trabajadas")
  correoElectronico      String?              @map("correo_electronico") @db.VarChar(45)
  contrasena             String?              @db.VarChar(255)
  createdAt              DateTime?            @default(now()) @map("created_at")
  dni                    String?              @db.VarChar(45)
  updatedAt              DateTime?            @map("updated_at")
  deletedAt              DateTime?            @map("deleted_at")

  rolId          Int
  rol            Rol                  @relation(fields: [rolId], references: [id])

  departamentoId Int                  @map("departamento_id")
  departamento   Departamento         @relation(fields: [departamentoId], references: [id])

  planillas      Planilla[]
  accesosComoSupervisor PlanillaAcceso[] @relation("SupervisorAccesos")
  accesosComoEmpleado   PlanillaAcceso[] @relation("EmpleadoAccesos")
  registrosDiarios     RegistroDiario[]

  @@map("empleados")
}

// -------- planillas -------
enum EstadoPlanilla {
  A
  R
}
model Planilla {
  id          Int            @id @default(autoincrement())
  fechaInicio DateTime       @map("fecha_inicio")
  fechaFin    DateTime       @map("fecha_fin")
  estado      EstadoPlanilla @map("estado")
  empleadoId  Int            @map("empleado_id")
  empresaId   Int            @map("empresa_id")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime?      @map("updated_at")
  deletedAt   DateTime?      @map("deleted_at")

  empleado    Empleado       @relation(fields: [empleadoId], references: [id])
  empresa     Empresa        @relation(fields: [empresaId], references: [id])


  @@index([empleadoId], name: "fk_planillas_empleados_idx")
  @@index([empresaId],  name: "fk_planillas_empresas_idx")
  @@map("planillas")
}

// ---- planilla accesos ----
model PlanillaAcceso {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime? @default(now()) @map("created_at")
  updatedAt    DateTime?                @map("updated_at")
  deletedAt    DateTime?                @map("deleted_at")
  supervisorId Int      @map("supervisor_id")
  empleadoId   Int      @map("empleado_id")

  supervisor   Empleado @relation("SupervisorAccesos", fields: [supervisorId], references: [id])
  empleado     Empleado @relation("EmpleadoAccesos",   fields: [empleadoId],   references: [id])

  @@index([supervisorId], name: "fk_accesos_supervisor_idx")
  @@index([empleadoId],   name: "fk_accesos_empleado_idx")
  @@map("planilla_accesos")
}

// -- registros diarios ----
model RegistroDiario {
  id                   Int             @id @default(autoincrement())
  horaEntrada          DateTime        @map("hora_entrada")
  horaSalida           DateTime        @map("hora_salida")
  jornada              String?         @db.VarChar(1)
  esDiaLibre           Boolean?        @map("es_dia_libre")
  comentarioEmpleado   String?         @db.VarChar(500)
  aprobacionSupervisor Boolean?        @map("aprobacion_supervisor")
  aprobacionRrhh       Boolean?        @map("aprobacion_rrhh")
  codigoSupervisor     String?         @db.VarChar(45)@map("codigo_supervisor")
  codigoRrhh           String?         @db.VarChar(45)@map("codigo_rrhh")
  comentarioSupervisor String?         @db.VarChar(500) @map("comentario_supervisor")
  comentarioRrhh       String?         @db.VarChar(500) @map("comentario_rrhh")
  empleadoId           Int             @map("empleado_id")
  createdAt            DateTime?       @default(now())   @map("created_at")
  updatedAt            DateTime?       @map("updated_at")
  deletedAt            DateTime?       @map("deleted_at")

  empleado             Empleado        @relation(fields: [empleadoId], references: [id])
  actividades          Actividad[]

  @@index([empleadoId], name: "idx_registro_empleado")
  @@map("registros_diarios")
}

// -- actividades ----
model Actividad {
  id                 Int              @id @default(autoincrement()) @map("id")
  registroDiarioId   Int              @map("planilla_dia_id")
  jobId              Int              @map("job_id")
  duracionHoras      Int              @map("duracion_horas")
  esExtra            Boolean?         @map("es_extra")
  className          String?          @db.VarChar(45) @map("class")
  descripcion        String           @db.VarChar(250)
  createdAt          DateTime?        @default(now()) @map("created_at")
  updatedAt          DateTime?                      @map("updated_at")
  deletedAt          DateTime?                      @map("deleted_at")

  registroDiario     RegistroDiario   @relation(fields: [registroDiarioId], references: [id])
  job                Job              @relation(fields: [jobId],            references: [id])

  @@unique([registroDiarioId, jobId], name: "uq_actividad_registro_job")
  @@map("actividades")
}

// --------- jobs ---------
model Job {
  id                Int       @id @default(autoincrement())
  nombre            String?   @db.VarChar(45)
  codigo            String?   @db.VarChar(10)
  descripcion       String?   @db.VarChar(45)
  createdAt         DateTime? @default(now()) @map("created_at")
  updatedAt         DateTime?                @map("updated_at")
  deletedAt         DateTime?                @map("deleted_at")
  empresaId         Int       @map("empresa_id")
  mostrarEmpresaId  Int       @map("mostrar_empresa_id")

  empresa           Empresa   @relation("EmpresaJobs",         fields: [empresaId],        references: [id])
  empresaMostrar    Empresa   @relation("EmpresaMostrarJobs",  fields: [mostrarEmpresaId], references: [id])

  actividades       Actividad[]

  @@index([empresaId],        name: "fk_jobs_empresa_idx")
  @@index([mostrarEmpresaId], name: "fk_jobs_mostrar_empresa_idx")
  @@map("jobs")
}
